
Projects: 
  Jilag:
    Todos:
      ☐ Implement codegen library @critical 
  libfsa:
    Todos:
      ☐ Implement nsa copy @freeze
      ☐ Implement nsa concatenation @freeze
      ☐ Find minimal match prefix  @freeze
      ☐ Implement fsa minimization  @freeze
  libre:
    Todos:
      ☐ Regex find @freeze
      ☐ Regex replace @freeze
  tests:
    Todos:

Documentation:
  Todos:
    libfsa:
      ☐ how to minimize dsa @high
    libre:
      ☐ Recursive descent parser @high
    codegen:


Archive:
  ✔ Make TODO file @done(18-02-03 14:41)
  ✔ Implement nsa, dsa @done(18-02-04 13:30)
  ✔ Implement Tomson algorithm @done(18-02-04 13:31)
  ✔ Remove e-closure @done(18-02-04 13:31)
  ✔ Translate nsa -> dsa @done(18-02-04 13:31)
  ✔ dsa copy @done(18-02-04 13:34)
  ✔ Allow states to save additional info @high @done(18-04-07 12:53)
  ✔ Implement Recursive descent parser @done(18-02-04 13:35)
  ✔ Implement regexp -> nsa @done(18-02-04 13:36)
  ✔ Implement simple regex interface @high @done(18-04-07 12:53)
  ✔ Test nsa -> dsa @done(18-02-04 13:33)
  ✔ Test regexp -> nsa -> dsa @done(18-02-04 13:33)
  ✔ Refactor tests @low @done(18-04-07 12:54)
  ✔ Start documentation @critical @done(18-02-03 17:31)
  ✔ about fsa (nsa, dsa) @high @today @done(18-04-07 12:54)
  ✔ fsa possible implementations @high @today @done(18-04-07 12:54)
  ✔ my fsa implementation @high @today @done(18-04-07 12:54)
  ✔ how to remove e-closure @high @today @done(18-04-07 12:54)
  ✔ how to translate nsa -> dsa @high @today @done(18-04-07 12:54)
  ✔ what is regexp @high @done(18-04-07 12:54)
  ✔ Tomson algorithm @high @done(18-04-07 12:54)
